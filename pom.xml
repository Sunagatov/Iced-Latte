<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.3</version>
        <relativePath/>
    </parent>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-bom</artifactId>
                <version>2.19.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <groupId>com.zufar-project</groupId>
    <artifactId>online-store</artifactId>
    <name>Online Store</name>
    <description>Online-store project for learning purpose</description>

    <properties>
        <!-- Project Version -->
        <project.version>${project.version}</project.version>

        <!-- Encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Java Version -->
        <java.version>17</java.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>

        <!-- Logging and Serialization Dependencies Versions -->
        <slf4j-api.version>2.0.5</slf4j-api.version>
        <jackson-core.version>2.15.2</jackson-core.version>
        <jackson-databind.version>2.15.2</jackson-databind.version>
        <logstash-logback-encoder.version>7.3</logstash-logback-encoder.version>
        <jackson-databind-nullable.version>0.2.1</jackson-databind-nullable.version>

        <!-- Testing Dependencies Versions -->
        <junit-jupiter-engine.version>5.4.2</junit-jupiter-engine.version>
        <junit-jupiter-api.version>5.4.2</junit-jupiter-api.version>
        <junit-platform-commons.version>1.4.0</junit-platform-commons.version>
        <junit-platform-launcher.version>1.4.0</junit-platform-launcher.version>
        <junit-jupiter.version>5.9.2</junit-jupiter.version>
        <testcontainers.version>1.18.3</testcontainers.version>
        <instancio-junit.version>3.0.1</instancio-junit.version>
        <rest-assured.version>5.3.2</rest-assured.version>
        <mock-server.version>1.19.0</mock-server.version>
        <mock-server-client.version>5.15.0</mock-server-client.version>

        <!-- Spring Dependencies Versions -->
        <spring-retry.version>2.0.2</spring-retry.version>
        <spring-boot-maven-plugin.version>3.1.2</spring-boot-maven-plugin.version>

        <!-- JWT Dependencies Versions -->
        <jjwt-impl.version>0.11.5</jjwt-impl.version>
        <jjwt-api.version>0.11.5</jjwt-api.version>
        <jjwt-jackson.version>0.11.5</jjwt-jackson.version>

        <!-- Validation Dependencies Versions -->
        <validation-api.version>2.0.1.Final</validation-api.version>

        <modelmapper.version>3.1.1</modelmapper.version>

        <!-- Swagger and OpenAPI Dependencies Versions -->
        <openapi-package>com.zufar.onlinestore.openapi</openapi-package>
        <openapi-package-with-dto>${openapi-package}.dto</openapi-package-with-dto>
        <springfox.swagger.version>3.0.0</springfox.swagger.version>
        <swagger-core-version>2.2.8</swagger-core-version>
        <springdoc-openapi-ui.version>1.7.0</springdoc-openapi-ui.version>

        <!-- Database Dependencies Versions -->
        <postgresql.version>42.6.0</postgresql.version>
        <liquibase.version>4.23.1</liquibase.version>

        <!-- Apache Maven Plugin Dependencies Versions -->
        <sonar-maven-plugin.version>3.7.0.1746</sonar-maven-plugin.version>
        <maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
        <openapi-generator-maven-plugin.version>6.6.0</openapi-generator-maven-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>

        <!-- Java EE Annotations Versions -->
        <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
        <servlet-api.version>2.5</servlet-api.version>

        <!-- Other Dependencies Versions -->
        <stripe.version>22.15.0</stripe.version>
        <lombok.version>1.18.24</lombok.version>
        <mapstruct.version>1.5.3.Final</mapstruct.version>
        <apache-commons-lang3.version>3.12.0</apache-commons-lang3.version>

    </properties>

    <!-- Dependencies -->
    <dependencies>

        <!-- Spring Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>3.1.3</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
            <version>${spring-retry.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Project Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- MapStruct -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>

        <!-- Validation Dependencies -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${validation-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- JWT Dependencies -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>${jjwt-api.version}</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>${jjwt-impl.version}</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>${jjwt-jackson.version}</version>
        </dependency>

        <!-- Logging Dependencies -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson-core.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-databind.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>${jackson-databind-nullable.version}</version>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash-logback-encoder.version}</version>
        </dependency>

        <!-- Spring Data JPA and Database Driver -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>

        <!-- Liquibase for Database Migrations -->
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase.version}</version>
        </dependency>

        <!-- Stripe Java Library -->
        <dependency>
            <groupId>com.stripe</groupId>
            <artifactId>stripe-java</artifactId>
            <version>${stripe.version}</version>
        </dependency>

        <!-- Apache Commons Lang -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache-commons-lang3.version}</version>
        </dependency>

        <!-- Java EE Annotations -->
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>${javax.annotation-api.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <profiles>
        <!-- Production Profile -->
        <profile>
            <id>prod</id>
            <dependencies>
                <dependency>
                    <groupId>io.micrometer</groupId>
                    <artifactId>micrometer-registry-prometheus</artifactId>
                </dependency>
            </dependencies>
        </profile>

        <!-- Development Profile -->
        <profile>
            <id>dev</id>
            <activation>
                <property>
                    <name>ENV</name>
                    <value>dev</value>
                </property>
            </activation>
            <dependencies>
                <!-- Swagger and OpenAPI Dependencies -->
                <dependency>
                    <groupId>io.swagger.core.v3</groupId>
                    <artifactId>swagger-annotations</artifactId>
                    <version>${swagger-core-version}</version>
                </dependency>
                <dependency>
                    <groupId>io.springfox</groupId>
                    <artifactId>springfox-swagger2</artifactId>
                    <version>${springfox.swagger.version}</version>
                </dependency>
                <dependency>
                    <groupId>io.springfox</groupId>
                    <artifactId>springfox-swagger-ui</artifactId>
                    <version>${springfox.swagger.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.springdoc</groupId>
                    <artifactId>springdoc-openapi-ui</artifactId>
                    <version>${springdoc-openapi-ui.version}</version>
                </dependency>

                <!-- Testing Dependencies -->
                <dependency>
                    <groupId>io.rest-assured</groupId>
                    <artifactId>rest-assured</artifactId>
                    <version>${rest-assured.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.testcontainers</groupId>
                    <artifactId>junit-jupiter</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-testcontainers</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.testcontainers</groupId>
                    <artifactId>mockserver</artifactId>
                    <version>${mock-server.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.mock-server</groupId>
                    <artifactId>mockserver-client-java</artifactId>
                    <version>${mock-server-client.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-test</artifactId>
                    <scope>test</scope>
                    <exclusions>
                        <exclusion>
                            <groupId>junit</groupId>
                            <artifactId>junit</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.instancio</groupId>
                    <artifactId>instancio-junit</artifactId>
                    <version>${instancio-junit.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                    <version>${junit.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter</artifactId>
                    <version>${junit-jupiter.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.testcontainers</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>${testcontainers.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.springframework.security</groupId>
                    <artifactId>spring-security-test</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>io.rest-assured</groupId>
                    <artifactId>json-schema-validator</artifactId>
                    <version>3.3.0</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <build>
        <plugins>
            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>-Amapstruct.suppressGeneratorTimestamp=true</arg>
                        <arg>-Amapstruct.defaultComponentModel=spring</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!-- Spring Boot Maven Plugin -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- SonarQube Scanner Plugin -->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar-maven-plugin.version}</version>
            </plugin>

            <!-- OpenAPI Generator Plugin -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${openapi-generator-maven-plugin.version}</version>
                <executions>
                    <!-- Generate from Product OpenAPI Spec -->
                    <execution>
                        <id>generate-from-product-openapi-spec</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/api-specs/product-openapi.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <apiPackage>${openapi-package}.product.api</apiPackage>
                            <modelPackage>${openapi-package-with-dto}</modelPackage>
                            <generateModels>true</generateModels>
                            <configOptions>
                                <interfaceOnly>true</interfaceOnly>
                                <useTags>true</useTags>
                            </configOptions>
                        </configuration>
                    </execution>
                    <!-- Generate from User OpenAPI Spec -->
                    <execution>
                        <id>generate-from-user-openapi-spec</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/api-specs/user-openapi.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <apiPackage>${openapi-package}.user.api</apiPackage>
                            <modelPackage>${openapi-package-with-dto}</modelPackage>
                            <generateModels>true</generateModels>
                            <configOptions>
                                <interfaceOnly>true</interfaceOnly>
                                <useTags>true</useTags>
                            </configOptions>
                        </configuration>
                    </execution>
                    <!-- Generate from Cart OpenAPI Spec -->
                    <execution>
                        <id>generate-from-cart-openapi-spec</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/api-specs/cart-openapi.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <apiPackage>${openapi-package}.cart.api</apiPackage>
                            <modelPackage>${openapi-package-with-dto}</modelPackage>
                            <generateModels>true</generateModels>
                            <configOptions>
                                <interfaceOnly>true</interfaceOnly>
                                <useTags>true</useTags>
                            </configOptions>
                        </configuration>
                    </execution>
                    <!-- Generate from Security OpenAPI Spec -->
                    <execution>
                        <id>generate-from-security-openapi-spec</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/api-specs/security-openapi.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <apiPackage>${openapi-package}.security.api</apiPackage>
                            <generateModels>false</generateModels>
                            <configOptions>
                                <modelPackage>com.zufar.onlinestore.security.dto</modelPackage>
                                <interfaceOnly>true</interfaceOnly>
                                <useTags>true</useTags>
                            </configOptions>
                        </configuration>
                    </execution>
                    <!-- Generate from Payment OpenAPI Spec -->
                    <execution>
                        <id>generate-from-payment-openapi-spec</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/api-specs/payment-openapi.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <configOptions>
                                <apiPackage>${openapi-package}.payment.api</apiPackage>
                                <modelPackage>${openapi-package-with-dto}</modelPackage>
                                <interfaceOnly>true</interfaceOnly>
                                <useTags>true</useTags>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
