version: '3.9'
services:

  #
  # Postgresql Database
  #
  postgresdb:
    image: 'postgres:13.11-bullseye'
    container_name: postgresdb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=testdb
    ports:
      - '5432:5432'
    networks:
      - online-store-network
    profiles:
      - dev
      - test
      - prod
    volumes:
      - 'db:/var/lib/postgresql/data'

  #
  # Online Store App
  #
  online-store-app:
    image: 'online-store/online-store:latest'
    container_name: online-store-app
    build:
      context: ./
      dockerfile: docker/online-store-app/Dockerfile
    ports:
      - '8083:8083'
    user: root
    healthcheck:
      test: "curl --fail --silent localhost:8083/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    deploy:
      replicas: 1
    networks:
      - online-store-network
    profiles:
      - prod

  sonarqube:
    image: sonarqube:latest
    container_name: onlinestore-sonarqube
    ports:
      - "9000:9000"
    networks:
      - online-store-network
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    profiles:
      - prod

networks:
  online-store-network:
    driver: bridge

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  db: